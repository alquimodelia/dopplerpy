[tool.poetry]
name = "{{cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{cookiecutter.project_desc }}"
authors = ["{{cookiecutter.author}}, {{cookiecutter.full_name}} <{{cookiecutter.email}}>"]
readme = "README.md"
license = "LICENSE"
homepage = "https://github.com/alquimodelia/{{cookiecutter.project_slug }}"
repository = "{{cookiecutter.git_remote}}"
documentation = "https://alquimodelia.github.io/{{cookiecutter.project_slug }}/"
keywords = ["python", "machine learning", "modeling", "keras"]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/alquimodelia/alquitable/issues"
"Source Code" = "https://github.com/alquimodelia/alquitable"




[tool.poetry.dependencies]
python = "^{{cookiecutter.python_version}}"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "*"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "*"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
poetry = "*"
ruff = "*"
black = "*"
isort = "*"

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
pytest = "*"


[build-system]
requires = ["setuptools","poetry"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79

[tool.ruff]
line-length = 79
select = ["E", "F", "B", "Q"]
show-fixes = true
ignore = ["E501"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true

[tool.pytest.ini_options]
testpaths = ["tests",]
pythonpath = ["."]


[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}.__main__:main"

